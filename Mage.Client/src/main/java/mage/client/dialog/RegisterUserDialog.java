package mage.client.dialog;

import mage.client.MageFrame;
import mage.client.SessionHandler;
import mage.client.preference.MagePreferences;
import mage.client.util.Localizer;
import mage.remote.Connection;
import org.apache.log4j.Logger;

import javax.swing.*;
import java.util.Arrays;
import java.util.concurrent.CancellationException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;

public class RegisterUserDialog extends MageDialog {

    private static final Logger logger = Logger.getLogger(ConnectDialog.class);
    private final ConnectDialog connectDialog;
    private Connection connection;
    private ConnectTask task;

    /**
     * Creates new form RegisterUserDialog
     */
    public RegisterUserDialog(ConnectDialog connectDialog) {
        initComponents();
        this.connectDialog = connectDialog;
    }

    public void showDialog() {
        this.txtServer.setText(this.connectDialog.getServer());
        this.txtPort.setText(this.connectDialog.getPort());
        this.lblStatus.setText("");

        this.setModal(true);
        this.setLocation(50, 50);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblServer = new javax.swing.JLabel();
        lblPort = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        btnRegister = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        txtServer = new javax.swing.JTextField();
        txtPort = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        lblPasswordConfirmation = new javax.swing.JLabel();
        txtPasswordConfirmation = new javax.swing.JPasswordField();
        lblEmail = new javax.swing.JLabel();
        lblPasswordConfirmationReasoning = new javax.swing.JLabel();
        lblEmailReasoning = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(Localizer.getInstance().getMessage("lblRegister"));

        lblServer.setLabelFor(txtServer);
        lblServer.setText(Localizer.getInstance().getMessage("lblServer") + ":");

        lblPort.setLabelFor(txtPort);
        lblPort.setText(Localizer.getInstance().getMessage("lblPort") + ":");

        lblUserName.setLabelFor(txtUserName);
        lblUserName.setText(Localizer.getInstance().getMessage("lblUserName") + ":");

        lblPassword.setLabelFor(txtPassword);
        lblPassword.setText(Localizer.getInstance().getMessage("lblPassword") + ":");

        txtUserName.addActionListener(evt -> txtUserNameActionPerformed(evt));

        btnRegister.setText(Localizer.getInstance().getMessage("lblRegister"));
        btnRegister.addActionListener(evt -> btnRegisterActionPerformed(evt));

        btnCancel.setText(Localizer.getInstance().getMessage("lblCancel"));
        btnCancel.addActionListener(evt -> btnCancelActionPerformed(evt));

        lblStatus.setToolTipText("");

        lblPasswordConfirmation.setLabelFor(txtPasswordConfirmation);
        lblPasswordConfirmation.setText(Localizer.getInstance().getMessage("lblPassword") + ":");

        lblEmail.setLabelFor(txtEmail);
        lblEmail.setText(Localizer.getInstance().getMessage("lblEmail") + ":");

        lblPasswordConfirmationReasoning.setFont(new java.awt.Font("Microsoft YaHei", 0, 10)); // NOI18N
        lblPasswordConfirmationReasoning.setLabelFor(txtPasswordConfirmation);
        lblPasswordConfirmationReasoning.setText("(" + Localizer.getInstance().getMessage("lblConfirmation") + ")");

        lblEmailReasoning.setFont(new java.awt.Font("Microsoft YaHei", 0, 10)); // NOI18N
        lblEmailReasoning.setLabelFor(txtEmail);
        lblEmailReasoning.setText(Localizer.getInstance().getMessage("lblEmailFunction"));
        lblEmailReasoning.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(lblPasswordConfirmationReasoning)
                                                .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addComponent(lblServer)
                                                                .addComponent(lblUserName)
                                                                .addComponent(lblPort)
                                                                .addComponent(lblPassword)
                                                                .addComponent(lblPasswordConfirmation)
                                                                .addComponent(lblEmail))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(txtServer, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(txtPasswordConfirmation, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addComponent(lblEmailReasoning)
                                                .addGroup(layout.createSequentialGroup()
                                                        .addComponent(btnRegister)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(btnCancel)))
                                        .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblServer)
                                        .addComponent(txtServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblPort)
                                        .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblUserName)
                                        .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblPassword)
                                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtPasswordConfirmation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblPasswordConfirmation))
                                .addComponent(lblPasswordConfirmationReasoning)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblEmail)
                                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblEmailReasoning)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnCancel)
                                        .addComponent(btnRegister))
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNameActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.hideDialog();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        if (!Arrays.equals(this.txtPassword.getPassword(), this.txtPasswordConfirmation.getPassword())) {
            MageFrame.getInstance().showError(Localizer.getInstance().getMessage("lblPasswordsDontMatch"));
            return;
        }
        connection = new Connection();
        connection.setHost(this.txtServer.getText().trim());
        connection.setPort(Integer.valueOf(this.txtPort.getText().trim()));
        connection.setUsername(this.txtUserName.getText().trim());
        connection.setPassword(String.valueOf(this.txtPassword.getPassword()).trim());
        connection.setEmail(this.txtEmail.getText().trim());
        PreferencesDialog.setProxyInformation(connection);
        task = new ConnectTask();
        task.execute();
    }//GEN-LAST:event_btnRegisterActionPerformed

    private class ConnectTask extends SwingWorker<Boolean, Void> {

        private boolean result = false;

        private static final int CONNECTION_TIMEOUT_MS = 2100;

        @Override
        protected Boolean doInBackground() throws Exception {
            lblStatus.setText(Localizer.getInstance().getMessage("lblConnecting"));
            btnRegister.setEnabled(false);
            result = SessionHandler.register(connection);
            return result;
        }

        @Override
        protected void done() {
            try {
                get(CONNECTION_TIMEOUT_MS, TimeUnit.MILLISECONDS);
                if (result) {
                    // Save settings.
                    MagePreferences.setServerAddress(connection.getHost());
                    MagePreferences.setServerPort(connection.getPort());
                    MagePreferences.setUserName(connection.getHost(), connection.getUsername());
                    MagePreferences.setPassword(connection.getHost(), connection.getPassword());
                    MagePreferences.setEmail(connection.getHost(), connection.getEmail());

                    String message = Localizer.getInstance().getMessage("lblRegistrationSucceeded");
                    lblStatus.setText(message);
                    MageFrame.getInstance().showMessage(message);
                    hideDialog();
                } else {
                    lblStatus.setText(Localizer.getInstance().getMessage("lblCouldNotRegister"));
                }
            } catch (InterruptedException | ExecutionException ex) {
                logger.fatal("Registration task error", ex);
            } catch (CancellationException ex) {
                logger.info("Registration was canceled");
                lblStatus.setText(Localizer.getInstance().getMessage("lblRegistrationWasCanceled"));
            } catch (TimeoutException ex) {
                logger.fatal(Localizer.getInstance().getMessage("lblRegistrationTimeout") + ": ", ex);
            } finally {
                MageFrame.stopConnecting();
                btnRegister.setEnabled(true);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmailReasoning;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPasswordConfirmation;
    private javax.swing.JLabel lblPasswordConfirmationReasoning;
    private javax.swing.JLabel lblPort;
    private javax.swing.JLabel lblServer;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPasswordConfirmation;
    private javax.swing.JTextField txtPort;
    private javax.swing.JTextField txtServer;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
